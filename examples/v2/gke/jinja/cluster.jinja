{#
Copyright 2016 Google Inc. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
#}


{% set NAME_PREFIX = env['deployment'] + '-' + env['name'] %}
{% set CLUSTER_NAME = NAME_PREFIX %}
{% set TYPE_NAME = NAME_PREFIX + '-type' %}

resources:
- name: {{ CLUSTER_NAME }}
  type: container.v1.cluster
  properties:
    zone: {{ properties['zone'] }}
    cluster:
      name: {{ CLUSTER_NAME }}
      addonsConfig:
            cloudRunConfig:
                disabled: false
            horizontalPodAutoscaling:
                disabled: false
            httpLoadBalancing:
                disabled: false
            kubernetesDashboard:
                disabled: true
            networkPolicyConfig:
                disabled: true
      masterAuth:
          "clientCertificateConfig":
              "issueClientCertificate": false
      "nodePools":
          -   "autoscaling":
                  "enabled": true
                  "maxNodeCount": 10
                  "minNodeCount": 3
              "config":
                  "imageType": "cos"
                  "machineType": "n1-standard-4"
                  "oauthScopes":
                    -  "https://www.googleapis.com/auth/cloud-platform"
                    -  "https://www.googleapis.com/auth/logging.write"
                    -  "https://www.googleapis.com/auth/monitoring.write"
                    -  "https://www.googleapis.com/auth/pubsub"
              "initialNodeCount": 3
              "management":
                  "autoRepair": true
                  "autoUpgrade": true
              "name": "default-pool"
              "upgradeSettings":
                  "maxSurge": 1
              workloadIdentityConfig:
                workloadPool: {{ env['project'] }}.svc.id.goog
      "releaseChannel":
          "channel": "RAPID"


- name: {{ TYPE_NAME }}
  type: deploymentmanager.v2beta.typeProvider
  properties:
    options:
      validationOptions:
        # Kubernetes API accepts ints, in fields they annotate with string.
        # This validation will show as warning rather than failure for
        # Deployment Manager.
        # https://github.com/kubernetes/kubernetes/issues/2971
        schemaValidation: IGNORE_WITH_WARNINGS
      # According to kubernetes spec, the path parameter 'name'
      # should be the value inside the metadata field
      # https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md
      # This mapping specifies that
      inputMappings:
      - fieldName: name
        location: PATH
        methodMatch: ^(get|delete|put|patch|post)$
        value: $.ifNull($.resource.properties.metadata.name, $.resource.name)
      - fieldName: namespace
        location: PATH
        methodMatch: ^(get|delete|put|patch|post)$
        value: $.resource.properties.metadata.namespace
      - fieldName: metadata.resourceVersion
        location: BODY
        methodMatch: ^(put)$
        value: $.resource.self.metadata.resourceVersion
      - fieldName: Authorization
        location: HEADER
        value: >
          $.concat("Bearer ", $.googleOauth2AccessToken())
    descriptorUrl: https://$(ref.{{ CLUSTER_NAME }}.endpoint)/openapi/v2

- name: cloud-run
  type: {{ env['project'] }}/{{ TYPE_NAME }}:/apis/operator.run.cloud.google.com/v1alpha1/namespaces/{namespace}/cloudruns/{name}
  properties:
    apiVersion: operator.run.cloud.google.com/v1alpha1
    kind: CloudRun
    metadata:
      namespace: cloud-run-system
      name: cloud-run
    spec:
      eventing:
        enabled: true

- name: control-plane-ksa
  type: {{ env['project'] }}/{{ TYPE_NAME }}:/api/v1/namespaces/{namespace}/serviceaccounts/{name}
  metadata:
    dependsOn:
    - cloud-run
  properties:
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      namespace: cloud-run-events
      name: controller
      annotations:
        iam.gke.io/gcp-service-account: cloud-run-events2@{{ env['project'] }}.iam.gserviceaccount.com
- name: broker-data-plane-ksa
  type: {{ env['project'] }}/{{ TYPE_NAME }}:/api/v1/namespaces/{namespace}/serviceaccounts/{name}
  metadata:
    dependsOn:
    - cloud-run
  properties:
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      namespace: cloud-run-events
      name: broker
      annotations:
        iam.gke.io/gcp-service-account: cloud-run-events2-broker@{{ env['project'] }}.iam.gserviceaccount.com


- name: config-gcp-auth
  type: {{ env['project'] }}/{{ TYPE_NAME }}:/api/v1/namespaces/{namespace}/configmaps/{name}
  metadata:
    dependsOn:
    - cloud-run
  properties:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      namespace: cloud-run-events
      name: config-gcp-auth
      annotations:
        events.cloud.google.com/initialized: "true"
    data:
      default-auth-config: |
        clusterDefault:
          serviceAccountName: cloud-run-events-sources
          workloadIdentityMapping:
            cloud-run-events-sources: cloud-run-events2-sources@{{ env['project'] }}.iam.gserviceaccount.com

- name: cloud-run-events2
  type: iam.v1.serviceAccount
  metadata:
    accessControl:
      gcpIamPolicy:
        bindings:
        - role: roles/iam.workloadIdentityUser
          members:
          - serviceAccount:{{ env['project'] }}.goog.svc.id[cloud-run-events/controller]
  properties:
    accountId: cloud-run-events2
- name: cloud-run-events2-broker
  type: iam.v1.serviceAccount
  metadata:
    accessControl:
      gcpIamPolicy:
        bindings:
        - role: roles/iam.workloadIdentityUser
          members:
          - serviceAccount:{{ env['project'] }}.goog.svc.id[cloud-run-events/broker]
  properties:
    accountId: cloud-run-events2-broker
- name: cloud-run-events2-sources
  type: iam.v1.serviceAccount
  metadata:
    dependsOn:
    - cloud-run-events2
    accessControl:
      gcpIamPolicy:
        bindings:
        - role: roles/iam.serviceAccountAdmin
          members:
          - serviceAccount:cloud-run-events2@{{ env['project'] }}.iam.gserviceaccount.com
  properties:
    accountId: cloud-run-events2-sources


